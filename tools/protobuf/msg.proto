package protobuf;

message Request{
	required uint64 id = 1;
	required string method = 2;
	optional bytes serialized_request = 3;
	optional string timer = 4;
	optional string desc = 5;
	extensions 100 to max;
}

message RpcErrorResponse{
	required string method = 1;
	required string text = 2;
}

message ConnectorInfo{
	required uint32 ServerId = 1;
	required uint32 PlayerCount = 2;
	required string TcpServerIp = 3;
	required string HttpServerIp = 4;
}

message ConnectorInfoResult{
	enum Result {
		OK = 0;
		ERROR = 1;
	}
	required Result result = 1 [default = OK];
	required uint32 server_time = 2;
}

message LoginInfo{
	required string serverIp = 1;
	required string gsInfo = 2;
}

message Login{
	optional string uid = 1;
	required string account = 2;
	required string password = 3;
	optional uint32 create_time = 4;
	optional string option = 5;
	optional uint32 language = 6;
	optional string udid = 7;
	optional string sessionKey = 8;
}

message LoginResult{
	enum Result {
		OK = 0;
		SERVERERROR = 1;
		USERNOTFOUND = 2;
		AUTH_FAILED = 3;
		ISONFIRE = 4;
	}
	required Result result = 1 [default = OK];
	required uint32 server_time = 2;
	required string sessionKey = 3;
	required string uid = 4;
	optional string errmsg = 5;
}

message Ping{
	
}

message PingResult{
	required uint32 server_time = 1;
}

message Chat{
	required string msg = 1;
}

message ChatResult{
	required string msg = 1;
}

message PlayerBaseInfo{
    required string uid = 1;
    required string name = 2;			//名字
    required uint32 level = 3;			//等级
    required uint32 experience = 4;		//经验
	required uint32 HP = 6;				//生命值
	required uint32 MP = 7;				//魔法值
	required uint32 Rage = 8;			//怒气值
	required uint32 maxHP = 9;			//最大生命值
	required uint32 maxMP = 10;			//最大魔法值
	required uint32 maxRage = 11;		//最大怒气值
    optional uint32 gender = 12;		//性别
    optional uint32 modelid = 13;		//模型id
    optional Transform transform = 14;	//位置
	optional uint32 Strenght = 15;		//力量
	optional uint32 Velocity = 16;		//速度
	optional uint32 Mana = 17;			//魔法
	optional uint32 Defence = 18;		//强壮
	optional uint32 Stamina = 19;		//根骨
	optional uint32 ATK = 20;			//攻击力
	optional uint32 Armor = 21;			//防御力
	optional uint32 Agility = 22;		//敏捷
	optional uint32 Spirit = 23;		//精神
	optional uint32 Recovery = 24;		//生命回复
}

message PlayerInfo{
	required PlayerBaseInfo base = 1;
}

message Vector3{
    required float X = 1;
    required float Y = 2;
    required float Z = 3;
}

message Quaternion{
    required float X = 1;
    required float Y = 2;
    required float Z = 3;
    required float W = 4;
}

message Transform{
    required Vector3 position = 1;
    required Quaternion rotation = 2;
    required Vector3 scale = 3;
}

message CreatureBaseInfo{
    required string uid = 1;
    required string name = 2;			//名字
    required uint32 level = 3;			//等级
    required uint32 experience = 4;		//经验
	required uint32 HP = 5;				//生命值
	required uint32 MP = 6;				//魔法值
	required uint32 maxHP = 7;			//最大生命值
	required uint32 maxMP = 8;			//最大魔法值
    optional uint32 gender = 9;			//性别
    optional uint32 modelid = 10;		//模型id
    optional Transform transform = 11;	//位置
	optional uint32 Strenght = 12;		//力量
	optional uint32 Velocity = 13;		//速度
	optional uint32 Mana = 14;			//魔法
	optional uint32 Defence = 15;		//强壮
	optional uint32 Stamina = 16;		//根骨
	optional uint32 ATK = 17;			//攻击力
	optional uint32 Armor = 18;			//防御力
	optional uint32 Agility = 19;		//敏捷
	optional uint32 Spirit = 20;		//精神
	optional uint32 Recovery = 21;		//生命回复
}

message AttackInfo{
    required uint32 droptime = 1;		//释放时间
	required uint32 attacker = 2;		//攻击者uid
	required uint32 position = 3;		//攻击位置
}

enum SpellType{
	LighningStorm = 1;					//技能1
	HealingWave = 2;					//技能2
}

message Spell{
	required SpellType type = 1;		//技能类型
	optional uint32 level = 2;			//技能等级
	optional uint32 damage = 3;			//技能伤害
	optional uint32 range = 4;			//技能范围
}

message SpellInfo{
    required uint32 droptime = 1;		//释放时间
	required uint32 attacker = 2;		//攻击者uid
	required uint32 position = 3;		//攻击位置
    required Spell spell = 4;			//所使用的技能
}

message BattleInfo{
	required string bid = 1;				//战斗id
	repeated CreatureBaseInfo partner = 2;  //队友数组
	repeated CreatureBaseInfo moster = 3;	//敌人数组
	repeated AttackInfo attackunits = 4;	//攻击序列
    repeated SpellInfo spells = 5;			//技能序列
}

message NotifyBattleStart{
	required string bid = 1;				//战斗id
	repeated CreatureBaseInfo partner = 2;  //队友数组
	repeated CreatureBaseInfo moster = 3;	//敌人数组
}

message BattleAttackQueue{
	required string bid = 1;				//战斗id
	repeated AttackInfo attackunits = 2;	//攻击序列
    repeated SpellInfo spells = 3;			//技能序列
}

message NotifyBattleEnd{
	required uint64 playerlid = 1;		//通知玩家结果
    optional uint32 exp = 2;			//奖励经验
}