// Code generated by protoc-gen-go.
// source: PB_PacketCommon.proto
// DO NOT EDIT!

/*
Package protobuf is a generated protocol buffer package.

It is generated from these files:
	PB_PacketCommon.proto

It has these top-level messages:
	Packet
	RpcErrorResponse
	Vector3
	Vector2
*/
package protobuf

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type Packet struct {
	Id               *uint64                   `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Cmd              *uint32                   `protobuf:"varint,2,req,name=cmd" json:"cmd,omitempty"`
	SerializedPacket []byte                    `protobuf:"bytes,3,opt,name=serialized_packet" json:"serialized_packet,omitempty"`
	Timer            *uint64                   `protobuf:"varint,4,opt,name=timer" json:"timer,omitempty"`
	Desc             *string                   `protobuf:"bytes,5,opt,name=desc" json:"desc,omitempty"`
	XXX_extensions   map[int32]proto.Extension `json:"-"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *Packet) Reset()         { *m = Packet{} }
func (m *Packet) String() string { return proto.CompactTextString(m) }
func (*Packet) ProtoMessage()    {}

var extRange_Packet = []proto.ExtensionRange{
	{100, 536870911},
}

func (*Packet) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_Packet
}
func (m *Packet) ExtensionMap() map[int32]proto.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto.Extension)
	}
	return m.XXX_extensions
}

func (m *Packet) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Packet) GetCmd() uint32 {
	if m != nil && m.Cmd != nil {
		return *m.Cmd
	}
	return 0
}

func (m *Packet) GetSerializedPacket() []byte {
	if m != nil {
		return m.SerializedPacket
	}
	return nil
}

func (m *Packet) GetTimer() uint64 {
	if m != nil && m.Timer != nil {
		return *m.Timer
	}
	return 0
}

func (m *Packet) GetDesc() string {
	if m != nil && m.Desc != nil {
		return *m.Desc
	}
	return ""
}

func (m *Packet) SetId(value uint64) {
	if m != nil {
		m.Id = &value
	}
}

func (m *Packet) SetCmd(value uint32) {
	if m != nil {
		m.Cmd = &value
	}
}

func (m *Packet) SetSerializedPacket(value []byte) {
	if m != nil {
		m.SerializedPacket = value
	}
}

func (m *Packet) SetTimer(value uint64) {
	if m != nil {
		m.Timer = &value
	}
}

func (m *Packet) SetDesc(value string) {
	if m != nil {
		m.Desc = &value
	}
}

type RpcErrorResponse struct {
	Cmd              *uint32 `protobuf:"varint,1,req,name=cmd" json:"cmd,omitempty"`
	Text             *string `protobuf:"bytes,2,req,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RpcErrorResponse) Reset()         { *m = RpcErrorResponse{} }
func (m *RpcErrorResponse) String() string { return proto.CompactTextString(m) }
func (*RpcErrorResponse) ProtoMessage()    {}

func (m *RpcErrorResponse) GetCmd() uint32 {
	if m != nil && m.Cmd != nil {
		return *m.Cmd
	}
	return 0
}

func (m *RpcErrorResponse) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *RpcErrorResponse) SetCmd(value uint32) {
	if m != nil {
		m.Cmd = &value
	}
}

func (m *RpcErrorResponse) SetText(value string) {
	if m != nil {
		m.Text = &value
	}
}

type Vector3 struct {
	X                *float32 `protobuf:"fixed32,1,req,name=x" json:"x,omitempty"`
	Y                *float32 `protobuf:"fixed32,2,req,name=y" json:"y,omitempty"`
	Z                *float32 `protobuf:"fixed32,3,req,name=z" json:"z,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Vector3) Reset()         { *m = Vector3{} }
func (m *Vector3) String() string { return proto.CompactTextString(m) }
func (*Vector3) ProtoMessage()    {}

func (m *Vector3) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *Vector3) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *Vector3) GetZ() float32 {
	if m != nil && m.Z != nil {
		return *m.Z
	}
	return 0
}

func (m *Vector3) SetX(value float32) {
	if m != nil {
		m.X = &value
	}
}

func (m *Vector3) SetY(value float32) {
	if m != nil {
		m.Y = &value
	}
}

func (m *Vector3) SetZ(value float32) {
	if m != nil {
		m.Z = &value
	}
}

type Vector2 struct {
	X                *float32 `protobuf:"fixed32,1,req,name=x" json:"x,omitempty"`
	Y                *float32 `protobuf:"fixed32,2,req,name=y" json:"y,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Vector2) Reset()         { *m = Vector2{} }
func (m *Vector2) String() string { return proto.CompactTextString(m) }
func (*Vector2) ProtoMessage()    {}

func (m *Vector2) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *Vector2) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *Vector2) SetX(value float32) {
	if m != nil {
		m.X = &value
	}
}

func (m *Vector2) SetY(value float32) {
	if m != nil {
		m.Y = &value
	}
}

func init() {
}
