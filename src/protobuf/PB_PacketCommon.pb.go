// Code generated by protoc-gen-go.
// source: PB_PacketCommon.proto
// DO NOT EDIT!

/*
Package protobuf is a generated protocol buffer package.

It is generated from these files:
	PB_PacketCommon.proto

It has these top-level messages:
	Request
	RpcErrorResponse
	Vector3
	Vector2
*/
package protobuf

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type Request struct {
	Id                *uint64                   `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Method            *string                   `protobuf:"bytes,2,req,name=method" json:"method,omitempty"`
	SerializedRequest []byte                    `protobuf:"bytes,3,opt,name=serialized_request" json:"serialized_request,omitempty"`
	Timer             *string                   `protobuf:"bytes,4,opt,name=timer" json:"timer,omitempty"`
	Desc              *string                   `protobuf:"bytes,5,opt,name=desc" json:"desc,omitempty"`
	XXX_extensions    map[int32]proto.Extension `json:"-"`
	XXX_unrecognized  []byte                    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}

var extRange_Request = []proto.ExtensionRange{
	{100, 536870911},
}

func (*Request) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_Request
}
func (m *Request) ExtensionMap() map[int32]proto.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto.Extension)
	}
	return m.XXX_extensions
}

func (m *Request) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Request) GetMethod() string {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return ""
}

func (m *Request) GetSerializedRequest() []byte {
	if m != nil {
		return m.SerializedRequest
	}
	return nil
}

func (m *Request) GetTimer() string {
	if m != nil && m.Timer != nil {
		return *m.Timer
	}
	return ""
}

func (m *Request) GetDesc() string {
	if m != nil && m.Desc != nil {
		return *m.Desc
	}
	return ""
}

func (m *Request) SetId(value uint64) {
	if m != nil {
		m.Id = &value
	}
}

func (m *Request) SetMethod(value string) {
	if m != nil {
		m.Method = &value
	}
}

func (m *Request) SetSerializedRequest(value []byte) {
	if m != nil {
		m.SerializedRequest = value
	}
}

func (m *Request) SetTimer(value string) {
	if m != nil {
		m.Timer = &value
	}
}

func (m *Request) SetDesc(value string) {
	if m != nil {
		m.Desc = &value
	}
}

type RpcErrorResponse struct {
	Method           *string `protobuf:"bytes,1,req,name=method" json:"method,omitempty"`
	Text             *string `protobuf:"bytes,2,req,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RpcErrorResponse) Reset()         { *m = RpcErrorResponse{} }
func (m *RpcErrorResponse) String() string { return proto.CompactTextString(m) }
func (*RpcErrorResponse) ProtoMessage()    {}

func (m *RpcErrorResponse) GetMethod() string {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return ""
}

func (m *RpcErrorResponse) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *RpcErrorResponse) SetMethod(value string) {
	if m != nil {
		m.Method = &value
	}
}

func (m *RpcErrorResponse) SetText(value string) {
	if m != nil {
		m.Text = &value
	}
}

type Vector3 struct {
	X                *float32 `protobuf:"fixed32,1,req,name=x" json:"x,omitempty"`
	Y                *float32 `protobuf:"fixed32,2,req,name=y" json:"y,omitempty"`
	Z                *float32 `protobuf:"fixed32,3,req,name=z" json:"z,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Vector3) Reset()         { *m = Vector3{} }
func (m *Vector3) String() string { return proto.CompactTextString(m) }
func (*Vector3) ProtoMessage()    {}

func (m *Vector3) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *Vector3) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *Vector3) GetZ() float32 {
	if m != nil && m.Z != nil {
		return *m.Z
	}
	return 0
}

func (m *Vector3) SetX(value float32) {
	if m != nil {
		m.X = &value
	}
}

func (m *Vector3) SetY(value float32) {
	if m != nil {
		m.Y = &value
	}
}

func (m *Vector3) SetZ(value float32) {
	if m != nil {
		m.Z = &value
	}
}

type Vector2 struct {
	X                *float32 `protobuf:"fixed32,1,req,name=x" json:"x,omitempty"`
	Y                *float32 `protobuf:"fixed32,2,req,name=y" json:"y,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Vector2) Reset()         { *m = Vector2{} }
func (m *Vector2) String() string { return proto.CompactTextString(m) }
func (*Vector2) ProtoMessage()    {}

func (m *Vector2) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *Vector2) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *Vector2) SetX(value float32) {
	if m != nil {
		m.X = &value
	}
}

func (m *Vector2) SetY(value float32) {
	if m != nil {
		m.Y = &value
	}
}

func init() {
}
