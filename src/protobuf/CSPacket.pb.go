// Code generated by protoc-gen-go.
// source: CSPacket.proto
// DO NOT EDIT!

/*
Package protobuf is a generated protocol buffer package.

It is generated from these files:
	CSPacket.proto

It has these top-level messages:
	CS_CheckSession
	CS_Ping
	CS_LeaveClientScene
	CS_EnterFight
	CS_ExitFight
	CS_BattleRoundInfo
	CS_BattleData
*/
package protobuf

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// discarding unused import protobuf1 "PB_PacketDefine.pb"
//import protobuf2 "XShare_Logic.pb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type CS_CheckSession struct {
	Uid              *string `protobuf:"bytes,1,req,name=uid" json:"uid,omitempty"`
	SessionKey       *string `protobuf:"bytes,2,req,name=sessionKey" json:"sessionKey,omitempty"`
	Timestamp        *uint32 `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CS_CheckSession) Reset()         { *m = CS_CheckSession{} }
func (m *CS_CheckSession) String() string { return proto.CompactTextString(m) }
func (*CS_CheckSession) ProtoMessage()    {}

func (m *CS_CheckSession) GetUid() string {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return ""
}

func (m *CS_CheckSession) GetSessionKey() string {
	if m != nil && m.SessionKey != nil {
		return *m.SessionKey
	}
	return ""
}

func (m *CS_CheckSession) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CS_CheckSession) SetUid(value string) {
	if m != nil {
		m.Uid = &value
	}
}

func (m *CS_CheckSession) SetSessionKey(value string) {
	if m != nil {
		m.SessionKey = &value
	}
}

func (m *CS_CheckSession) SetTimestamp(value uint32) {
	if m != nil {
		m.Timestamp = &value
	}
}

type CS_Ping struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CS_Ping) Reset()         { *m = CS_Ping{} }
func (m *CS_Ping) String() string { return proto.CompactTextString(m) }
func (*CS_Ping) ProtoMessage()    {}

// 将客户端战斗过程的相关信比如是否中途退掉了多少血, 是否获得奖励等传递给服务
type CS_LeaveClientScene struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CS_LeaveClientScene) Reset()         { *m = CS_LeaveClientScene{} }
func (m *CS_LeaveClientScene) String() string { return proto.CompactTextString(m) }
func (*CS_LeaveClientScene) ProtoMessage()    {}

type CS_EnterFight struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CS_EnterFight) Reset()         { *m = CS_EnterFight{} }
func (m *CS_EnterFight) String() string { return proto.CompactTextString(m) }
func (*CS_EnterFight) ProtoMessage()    {}

type CS_ExitFight struct {
	RoundId          *uint32 `protobuf:"varint,1,req" json:"RoundId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CS_ExitFight) Reset()         { *m = CS_ExitFight{} }
func (m *CS_ExitFight) String() string { return proto.CompactTextString(m) }
func (*CS_ExitFight) ProtoMessage()    {}

func (m *CS_ExitFight) GetRoundId() uint32 {
	if m != nil && m.RoundId != nil {
		return *m.RoundId
	}
	return 0
}

func (m *CS_ExitFight) SetRoundId(value uint32) {
	if m != nil {
		m.RoundId = &value
	}
}

type CS_BattleRoundInfo struct {
	RoundId          *uint32 `protobuf:"varint,1,req" json:"RoundId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CS_BattleRoundInfo) Reset()         { *m = CS_BattleRoundInfo{} }
func (m *CS_BattleRoundInfo) String() string { return proto.CompactTextString(m) }
func (*CS_BattleRoundInfo) ProtoMessage()    {}

func (m *CS_BattleRoundInfo) GetRoundId() uint32 {
	if m != nil && m.RoundId != nil {
		return *m.RoundId
	}
	return 0
}

func (m *CS_BattleRoundInfo) SetRoundId(value uint32) {
	if m != nil {
		m.RoundId = &value
	}
}

type CS_BattleData struct {
	LeftBloodValue   *uint32                  `protobuf:"varint,1,req" json:"LeftBloodValue,omitempty"`
	RightBloodValue  *uint32                  `protobuf:"varint,2,req" json:"RightBloodValue,omitempty"`
	LeftBattleValue  *uint32                  `protobuf:"varint,3,req" json:"LeftBattleValue,omitempty"`
	RightBattleValue *uint32                  `protobuf:"varint,4,req" json:"RightBattleValue,omitempty"`
	BattleRound      []*BattleRound `protobuf:"bytes,5,rep,name=battleRound" json:"battleRound,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *CS_BattleData) Reset()         { *m = CS_BattleData{} }
func (m *CS_BattleData) String() string { return proto.CompactTextString(m) }
func (*CS_BattleData) ProtoMessage()    {}

func (m *CS_BattleData) GetLeftBloodValue() uint32 {
	if m != nil && m.LeftBloodValue != nil {
		return *m.LeftBloodValue
	}
	return 0
}

func (m *CS_BattleData) GetRightBloodValue() uint32 {
	if m != nil && m.RightBloodValue != nil {
		return *m.RightBloodValue
	}
	return 0
}

func (m *CS_BattleData) GetLeftBattleValue() uint32 {
	if m != nil && m.LeftBattleValue != nil {
		return *m.LeftBattleValue
	}
	return 0
}

func (m *CS_BattleData) GetRightBattleValue() uint32 {
	if m != nil && m.RightBattleValue != nil {
		return *m.RightBattleValue
	}
	return 0
}

func (m *CS_BattleData) GetBattleRound() []*BattleRound {
	if m != nil {
		return m.BattleRound
	}
	return nil
}

func (m *CS_BattleData) SetLeftBloodValue(value uint32) {
	if m != nil {
		m.LeftBloodValue = &value
	}
}

func (m *CS_BattleData) SetRightBloodValue(value uint32) {
	if m != nil {
		m.RightBloodValue = &value
	}
}

func (m *CS_BattleData) SetLeftBattleValue(value uint32) {
	if m != nil {
		m.LeftBattleValue = &value
	}
}

func (m *CS_BattleData) SetRightBattleValue(value uint32) {
	if m != nil {
		m.RightBattleValue = &value
	}
}

func (m *CS_BattleData) SetBattleRound(value []*BattleRound) {
	if m != nil {
		m.BattleRound = value
	}
}

func init() {
}
