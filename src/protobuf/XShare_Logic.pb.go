// Code generated by protoc-gen-go.
// source: XShare_Logic.proto
// DO NOT EDIT!

/*
Package protobuf is a generated protocol buffer package.

It is generated from these files:
	XShare_Logic.proto

It has these top-level messages:
	PlayerInfo
*/
package protobuf

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type PlayerInfo struct {
	Uid              *string `protobuf:"bytes,1,req,name=uid" json:"uid,omitempty"`
	Stat             []byte  `protobuf:"bytes,2,req,name=stat" json:"stat,omitempty"`
	Bp               []byte  `protobuf:"bytes,3,opt,name=bp" json:"bp,omitempty"`
	Property         []byte  `protobuf:"bytes,4,opt,name=property" json:"property,omitempty"`
	Revise           []byte  `protobuf:"bytes,5,opt,name=revise" json:"revise,omitempty"`
	Against          []byte  `protobuf:"bytes,6,opt,name=against" json:"against,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PlayerInfo) Reset()         { *m = PlayerInfo{} }
func (m *PlayerInfo) String() string { return proto.CompactTextString(m) }
func (*PlayerInfo) ProtoMessage()    {}

func (m *PlayerInfo) GetUid() string {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return ""
}

func (m *PlayerInfo) GetStat() []byte {
	if m != nil {
		return m.Stat
	}
	return nil
}

func (m *PlayerInfo) GetBp() []byte {
	if m != nil {
		return m.Bp
	}
	return nil
}

func (m *PlayerInfo) GetProperty() []byte {
	if m != nil {
		return m.Property
	}
	return nil
}

func (m *PlayerInfo) GetRevise() []byte {
	if m != nil {
		return m.Revise
	}
	return nil
}

func (m *PlayerInfo) GetAgainst() []byte {
	if m != nil {
		return m.Against
	}
	return nil
}

func (m *PlayerInfo) SetUid(value string) {
	if m != nil {
		m.Uid = &value
	}
}

func (m *PlayerInfo) SetStat(value []byte) {
	if m != nil {
		m.Stat = value
	}
}

func (m *PlayerInfo) SetBp(value []byte) {
	if m != nil {
		m.Bp = value
	}
}

func (m *PlayerInfo) SetProperty(value []byte) {
	if m != nil {
		m.Property = value
	}
}

func (m *PlayerInfo) SetRevise(value []byte) {
	if m != nil {
		m.Revise = value
	}
}

func (m *PlayerInfo) SetAgainst(value []byte) {
	if m != nil {
		m.Against = value
	}
}

func init() {
}
