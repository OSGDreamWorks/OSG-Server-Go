// Code generated by protoc-gen-go.
// source: msg.proto
// DO NOT EDIT!

/*
Package protobuf is a generated protocol buffer package.

It is generated from these files:
	msg.proto

It has these top-level messages:
	Request
	RpcErrorResponse
	ConnectorInfo
	ConnectorInfoResult
	LoginInfo
	Login
	LoginResult
	Ping
	PingResult
	Chat
	ChatResult
	PlayerBaseInfo
	PlayerInfo
	Vector3
	Quaternion
	Transform
*/
package protobuf

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type ConnectorInfoResult_Result int32

const (
	ConnectorInfoResult_OK    ConnectorInfoResult_Result = 0
	ConnectorInfoResult_ERROR ConnectorInfoResult_Result = 1
)

var ConnectorInfoResult_Result_name = map[int32]string{
	0: "OK",
	1: "ERROR",
}
var ConnectorInfoResult_Result_value = map[string]int32{
	"OK":    0,
	"ERROR": 1,
}

func (x ConnectorInfoResult_Result) Enum() *ConnectorInfoResult_Result {
	p := new(ConnectorInfoResult_Result)
	*p = x
	return p
}
func (x ConnectorInfoResult_Result) String() string {
	return proto.EnumName(ConnectorInfoResult_Result_name, int32(x))
}
func (x ConnectorInfoResult_Result) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *ConnectorInfoResult_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ConnectorInfoResult_Result_value, data, "ConnectorInfoResult_Result")
	if err != nil {
		return err
	}
	*x = ConnectorInfoResult_Result(value)
	return nil
}

type LoginResult_Result int32

const (
	LoginResult_OK           LoginResult_Result = 0
	LoginResult_SERVERERROR  LoginResult_Result = 1
	LoginResult_USERNOTFOUND LoginResult_Result = 2
	LoginResult_AUTH_FAILED  LoginResult_Result = 3
	LoginResult_ISONFIRE     LoginResult_Result = 4
)

var LoginResult_Result_name = map[int32]string{
	0: "OK",
	1: "SERVERERROR",
	2: "USERNOTFOUND",
	3: "AUTH_FAILED",
	4: "ISONFIRE",
}
var LoginResult_Result_value = map[string]int32{
	"OK":           0,
	"SERVERERROR":  1,
	"USERNOTFOUND": 2,
	"AUTH_FAILED":  3,
	"ISONFIRE":     4,
}

func (x LoginResult_Result) Enum() *LoginResult_Result {
	p := new(LoginResult_Result)
	*p = x
	return p
}
func (x LoginResult_Result) String() string {
	return proto.EnumName(LoginResult_Result_name, int32(x))
}
func (x LoginResult_Result) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *LoginResult_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LoginResult_Result_value, data, "LoginResult_Result")
	if err != nil {
		return err
	}
	*x = LoginResult_Result(value)
	return nil
}

type Request struct {
	Id                *uint64                   `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Method            *string                   `protobuf:"bytes,2,req,name=method" json:"method,omitempty"`
	SerializedRequest []byte                    `protobuf:"bytes,3,opt,name=serialized_request" json:"serialized_request,omitempty"`
	Timer             *string                   `protobuf:"bytes,4,opt,name=timer" json:"timer,omitempty"`
	Desc              *string                   `protobuf:"bytes,5,opt,name=desc" json:"desc,omitempty"`
	XXX_extensions    map[int32]proto.Extension `json:"-"`
	XXX_unrecognized  []byte                    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}

var extRange_Request = []proto.ExtensionRange{
	{100, 536870911},
}

func (*Request) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_Request
}
func (m *Request) ExtensionMap() map[int32]proto.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto.Extension)
	}
	return m.XXX_extensions
}

func (m *Request) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Request) GetMethod() string {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return ""
}

func (m *Request) GetSerializedRequest() []byte {
	if m != nil {
		return m.SerializedRequest
	}
	return nil
}

func (m *Request) GetTimer() string {
	if m != nil && m.Timer != nil {
		return *m.Timer
	}
	return ""
}

func (m *Request) GetDesc() string {
	if m != nil && m.Desc != nil {
		return *m.Desc
	}
	return ""
}

func (m *Request) SetId(value uint64) {
	if m != nil {
		m.Id = &value
	}
}

func (m *Request) SetMethod(value string) {
	if m != nil {
		m.Method = &value
	}
}

func (m *Request) SetSerializedRequest(value []byte) {
	if m != nil {
		m.SerializedRequest = value
	}
}

func (m *Request) SetTimer(value string) {
	if m != nil {
		m.Timer = &value
	}
}

func (m *Request) SetDesc(value string) {
	if m != nil {
		m.Desc = &value
	}
}

type RpcErrorResponse struct {
	Method           *string `protobuf:"bytes,1,req,name=method" json:"method,omitempty"`
	Text             *string `protobuf:"bytes,2,req,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RpcErrorResponse) Reset()         { *m = RpcErrorResponse{} }
func (m *RpcErrorResponse) String() string { return proto.CompactTextString(m) }
func (*RpcErrorResponse) ProtoMessage()    {}

func (m *RpcErrorResponse) GetMethod() string {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return ""
}

func (m *RpcErrorResponse) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *RpcErrorResponse) SetMethod(value string) {
	if m != nil {
		m.Method = &value
	}
}

func (m *RpcErrorResponse) SetText(value string) {
	if m != nil {
		m.Text = &value
	}
}

type ConnectorInfo struct {
	ServerId         *uint32 `protobuf:"varint,1,req" json:"ServerId,omitempty"`
	PlayerCount      *uint32 `protobuf:"varint,2,req" json:"PlayerCount,omitempty"`
	TcpServerIp      *string `protobuf:"bytes,3,req" json:"TcpServerIp,omitempty"`
	HttpServerIp     *string `protobuf:"bytes,4,req" json:"HttpServerIp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ConnectorInfo) Reset()         { *m = ConnectorInfo{} }
func (m *ConnectorInfo) String() string { return proto.CompactTextString(m) }
func (*ConnectorInfo) ProtoMessage()    {}

func (m *ConnectorInfo) GetServerId() uint32 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return 0
}

func (m *ConnectorInfo) GetPlayerCount() uint32 {
	if m != nil && m.PlayerCount != nil {
		return *m.PlayerCount
	}
	return 0
}

func (m *ConnectorInfo) GetTcpServerIp() string {
	if m != nil && m.TcpServerIp != nil {
		return *m.TcpServerIp
	}
	return ""
}

func (m *ConnectorInfo) GetHttpServerIp() string {
	if m != nil && m.HttpServerIp != nil {
		return *m.HttpServerIp
	}
	return ""
}

func (m *ConnectorInfo) SetServerId(value uint32) {
	if m != nil {
		m.ServerId = &value
	}
}

func (m *ConnectorInfo) SetPlayerCount(value uint32) {
	if m != nil {
		m.PlayerCount = &value
	}
}

func (m *ConnectorInfo) SetTcpServerIp(value string) {
	if m != nil {
		m.TcpServerIp = &value
	}
}

func (m *ConnectorInfo) SetHttpServerIp(value string) {
	if m != nil {
		m.HttpServerIp = &value
	}
}

type ConnectorInfoResult struct {
	Result           *ConnectorInfoResult_Result `protobuf:"varint,1,req,name=result,enum=protobuf.ConnectorInfoResult_Result,def=0" json:"result,omitempty"`
	ServerTime       *uint32                     `protobuf:"varint,2,req,name=server_time" json:"server_time,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *ConnectorInfoResult) Reset()         { *m = ConnectorInfoResult{} }
func (m *ConnectorInfoResult) String() string { return proto.CompactTextString(m) }
func (*ConnectorInfoResult) ProtoMessage()    {}

const Default_ConnectorInfoResult_Result ConnectorInfoResult_Result = ConnectorInfoResult_OK

func (m *ConnectorInfoResult) GetResult() ConnectorInfoResult_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_ConnectorInfoResult_Result
}

func (m *ConnectorInfoResult) GetServerTime() uint32 {
	if m != nil && m.ServerTime != nil {
		return *m.ServerTime
	}
	return 0
}

func (m *ConnectorInfoResult) SetResult(value ConnectorInfoResult_Result) {
	if m != nil {
		m.Result = &value
	}
}

func (m *ConnectorInfoResult) SetServerTime(value uint32) {
	if m != nil {
		m.ServerTime = &value
	}
}

type LoginInfo struct {
	ServerIp         *string `protobuf:"bytes,1,req,name=serverIp" json:"serverIp,omitempty"`
	GsInfo           *string `protobuf:"bytes,2,req,name=gsInfo" json:"gsInfo,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LoginInfo) Reset()         { *m = LoginInfo{} }
func (m *LoginInfo) String() string { return proto.CompactTextString(m) }
func (*LoginInfo) ProtoMessage()    {}

func (m *LoginInfo) GetServerIp() string {
	if m != nil && m.ServerIp != nil {
		return *m.ServerIp
	}
	return ""
}

func (m *LoginInfo) GetGsInfo() string {
	if m != nil && m.GsInfo != nil {
		return *m.GsInfo
	}
	return ""
}

func (m *LoginInfo) SetServerIp(value string) {
	if m != nil {
		m.ServerIp = &value
	}
}

func (m *LoginInfo) SetGsInfo(value string) {
	if m != nil {
		m.GsInfo = &value
	}
}

type Login struct {
	Uid              *string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	Account          *string `protobuf:"bytes,2,req,name=account" json:"account,omitempty"`
	Password         *string `protobuf:"bytes,3,req,name=password" json:"password,omitempty"`
	CreateTime       *uint32 `protobuf:"varint,4,opt,name=create_time" json:"create_time,omitempty"`
	Option           *string `protobuf:"bytes,5,opt,name=option" json:"option,omitempty"`
	Language         *uint32 `protobuf:"varint,6,opt,name=language" json:"language,omitempty"`
	Udid             *string `protobuf:"bytes,7,opt,name=udid" json:"udid,omitempty"`
	SessionKey       *string `protobuf:"bytes,8,opt,name=sessionKey" json:"sessionKey,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Login) Reset()         { *m = Login{} }
func (m *Login) String() string { return proto.CompactTextString(m) }
func (*Login) ProtoMessage()    {}

func (m *Login) GetUid() string {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return ""
}

func (m *Login) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

func (m *Login) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *Login) GetCreateTime() uint32 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *Login) GetOption() string {
	if m != nil && m.Option != nil {
		return *m.Option
	}
	return ""
}

func (m *Login) GetLanguage() uint32 {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return 0
}

func (m *Login) GetUdid() string {
	if m != nil && m.Udid != nil {
		return *m.Udid
	}
	return ""
}

func (m *Login) GetSessionKey() string {
	if m != nil && m.SessionKey != nil {
		return *m.SessionKey
	}
	return ""
}

func (m *Login) SetUid(value string) {
	if m != nil {
		m.Uid = &value
	}
}

func (m *Login) SetAccount(value string) {
	if m != nil {
		m.Account = &value
	}
}

func (m *Login) SetPassword(value string) {
	if m != nil {
		m.Password = &value
	}
}

func (m *Login) SetCreateTime(value uint32) {
	if m != nil {
		m.CreateTime = &value
	}
}

func (m *Login) SetOption(value string) {
	if m != nil {
		m.Option = &value
	}
}

func (m *Login) SetLanguage(value uint32) {
	if m != nil {
		m.Language = &value
	}
}

func (m *Login) SetUdid(value string) {
	if m != nil {
		m.Udid = &value
	}
}

func (m *Login) SetSessionKey(value string) {
	if m != nil {
		m.SessionKey = &value
	}
}

type LoginResult struct {
	Result           *LoginResult_Result `protobuf:"varint,1,req,name=result,enum=protobuf.LoginResult_Result,def=0" json:"result,omitempty"`
	ServerTime       *uint32             `protobuf:"varint,2,req,name=server_time" json:"server_time,omitempty"`
	SessionKey       *string             `protobuf:"bytes,3,req,name=sessionKey" json:"sessionKey,omitempty"`
	Uid              *string             `protobuf:"bytes,4,req,name=uid" json:"uid,omitempty"`
	Errmsg           *string             `protobuf:"bytes,5,opt,name=errmsg" json:"errmsg,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *LoginResult) Reset()         { *m = LoginResult{} }
func (m *LoginResult) String() string { return proto.CompactTextString(m) }
func (*LoginResult) ProtoMessage()    {}

const Default_LoginResult_Result LoginResult_Result = LoginResult_OK

func (m *LoginResult) GetResult() LoginResult_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_LoginResult_Result
}

func (m *LoginResult) GetServerTime() uint32 {
	if m != nil && m.ServerTime != nil {
		return *m.ServerTime
	}
	return 0
}

func (m *LoginResult) GetSessionKey() string {
	if m != nil && m.SessionKey != nil {
		return *m.SessionKey
	}
	return ""
}

func (m *LoginResult) GetUid() string {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return ""
}

func (m *LoginResult) GetErrmsg() string {
	if m != nil && m.Errmsg != nil {
		return *m.Errmsg
	}
	return ""
}

func (m *LoginResult) SetResult(value LoginResult_Result) {
	if m != nil {
		m.Result = &value
	}
}

func (m *LoginResult) SetServerTime(value uint32) {
	if m != nil {
		m.ServerTime = &value
	}
}

func (m *LoginResult) SetSessionKey(value string) {
	if m != nil {
		m.SessionKey = &value
	}
}

func (m *LoginResult) SetUid(value string) {
	if m != nil {
		m.Uid = &value
	}
}

func (m *LoginResult) SetErrmsg(value string) {
	if m != nil {
		m.Errmsg = &value
	}
}

type Ping struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}

type PingResult struct {
	ServerTime       *uint32 `protobuf:"varint,1,req,name=server_time" json:"server_time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PingResult) Reset()         { *m = PingResult{} }
func (m *PingResult) String() string { return proto.CompactTextString(m) }
func (*PingResult) ProtoMessage()    {}

func (m *PingResult) GetServerTime() uint32 {
	if m != nil && m.ServerTime != nil {
		return *m.ServerTime
	}
	return 0
}

func (m *PingResult) SetServerTime(value uint32) {
	if m != nil {
		m.ServerTime = &value
	}
}

type Chat struct {
	Msg              *string `protobuf:"bytes,1,req,name=msg" json:"msg,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Chat) Reset()         { *m = Chat{} }
func (m *Chat) String() string { return proto.CompactTextString(m) }
func (*Chat) ProtoMessage()    {}

func (m *Chat) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *Chat) SetMsg(value string) {
	if m != nil {
		m.Msg = &value
	}
}

type ChatResult struct {
	Msg              *string `protobuf:"bytes,1,req,name=msg" json:"msg,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChatResult) Reset()         { *m = ChatResult{} }
func (m *ChatResult) String() string { return proto.CompactTextString(m) }
func (*ChatResult) ProtoMessage()    {}

func (m *ChatResult) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *ChatResult) SetMsg(value string) {
	if m != nil {
		m.Msg = &value
	}
}

type PlayerBaseInfo struct {
	Uid              *string    `protobuf:"bytes,1,req,name=uid" json:"uid,omitempty"`
	Name             *string    `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Level            *uint32    `protobuf:"varint,3,req,name=level" json:"level,omitempty"`
	Experience       *uint32    `protobuf:"varint,4,req,name=experience" json:"experience,omitempty"`
	HP               *uint32    `protobuf:"varint,6,req" json:"HP,omitempty"`
	MP               *uint32    `protobuf:"varint,7,req" json:"MP,omitempty"`
	Rage             *uint32    `protobuf:"varint,8,req" json:"Rage,omitempty"`
	MaxHP            *uint32    `protobuf:"varint,9,req,name=maxHP" json:"maxHP,omitempty"`
	MaxMP            *uint32    `protobuf:"varint,10,req,name=maxMP" json:"maxMP,omitempty"`
	MaxRage          *uint32    `protobuf:"varint,11,req,name=maxRage" json:"maxRage,omitempty"`
	Gender           *uint32    `protobuf:"varint,12,opt,name=gender" json:"gender,omitempty"`
	Modelid          *uint32    `protobuf:"varint,13,opt,name=modelid" json:"modelid,omitempty"`
	Transform        *Transform `protobuf:"bytes,14,opt,name=transform" json:"transform,omitempty"`
	Strenght         *uint32    `protobuf:"varint,15,opt" json:"Strenght,omitempty"`
	Velocity         *uint32    `protobuf:"varint,16,opt" json:"Velocity,omitempty"`
	Mana             *uint32    `protobuf:"varint,17,opt" json:"Mana,omitempty"`
	Defence          *uint32    `protobuf:"varint,18,opt" json:"Defence,omitempty"`
	Stamina          *uint32    `protobuf:"varint,19,opt" json:"Stamina,omitempty"`
	ATK              *uint32    `protobuf:"varint,20,opt" json:"ATK,omitempty"`
	Armor            *uint32    `protobuf:"varint,21,opt" json:"Armor,omitempty"`
	Agility          *uint32    `protobuf:"varint,22,opt" json:"Agility,omitempty"`
	Spirit           *uint32    `protobuf:"varint,23,opt" json:"Spirit,omitempty"`
	Recovery         *uint32    `protobuf:"varint,24,opt" json:"Recovery,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *PlayerBaseInfo) Reset()         { *m = PlayerBaseInfo{} }
func (m *PlayerBaseInfo) String() string { return proto.CompactTextString(m) }
func (*PlayerBaseInfo) ProtoMessage()    {}

func (m *PlayerBaseInfo) GetUid() string {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return ""
}

func (m *PlayerBaseInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *PlayerBaseInfo) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *PlayerBaseInfo) GetExperience() uint32 {
	if m != nil && m.Experience != nil {
		return *m.Experience
	}
	return 0
}

func (m *PlayerBaseInfo) GetHP() uint32 {
	if m != nil && m.HP != nil {
		return *m.HP
	}
	return 0
}

func (m *PlayerBaseInfo) GetMP() uint32 {
	if m != nil && m.MP != nil {
		return *m.MP
	}
	return 0
}

func (m *PlayerBaseInfo) GetRage() uint32 {
	if m != nil && m.Rage != nil {
		return *m.Rage
	}
	return 0
}

func (m *PlayerBaseInfo) GetMaxHP() uint32 {
	if m != nil && m.MaxHP != nil {
		return *m.MaxHP
	}
	return 0
}

func (m *PlayerBaseInfo) GetMaxMP() uint32 {
	if m != nil && m.MaxMP != nil {
		return *m.MaxMP
	}
	return 0
}

func (m *PlayerBaseInfo) GetMaxRage() uint32 {
	if m != nil && m.MaxRage != nil {
		return *m.MaxRage
	}
	return 0
}

func (m *PlayerBaseInfo) GetGender() uint32 {
	if m != nil && m.Gender != nil {
		return *m.Gender
	}
	return 0
}

func (m *PlayerBaseInfo) GetModelid() uint32 {
	if m != nil && m.Modelid != nil {
		return *m.Modelid
	}
	return 0
}

func (m *PlayerBaseInfo) GetTransform() *Transform {
	if m != nil {
		return m.Transform
	}
	return nil
}

func (m *PlayerBaseInfo) GetStrenght() uint32 {
	if m != nil && m.Strenght != nil {
		return *m.Strenght
	}
	return 0
}

func (m *PlayerBaseInfo) GetVelocity() uint32 {
	if m != nil && m.Velocity != nil {
		return *m.Velocity
	}
	return 0
}

func (m *PlayerBaseInfo) GetMana() uint32 {
	if m != nil && m.Mana != nil {
		return *m.Mana
	}
	return 0
}

func (m *PlayerBaseInfo) GetDefence() uint32 {
	if m != nil && m.Defence != nil {
		return *m.Defence
	}
	return 0
}

func (m *PlayerBaseInfo) GetStamina() uint32 {
	if m != nil && m.Stamina != nil {
		return *m.Stamina
	}
	return 0
}

func (m *PlayerBaseInfo) GetATK() uint32 {
	if m != nil && m.ATK != nil {
		return *m.ATK
	}
	return 0
}

func (m *PlayerBaseInfo) GetArmor() uint32 {
	if m != nil && m.Armor != nil {
		return *m.Armor
	}
	return 0
}

func (m *PlayerBaseInfo) GetAgility() uint32 {
	if m != nil && m.Agility != nil {
		return *m.Agility
	}
	return 0
}

func (m *PlayerBaseInfo) GetSpirit() uint32 {
	if m != nil && m.Spirit != nil {
		return *m.Spirit
	}
	return 0
}

func (m *PlayerBaseInfo) GetRecovery() uint32 {
	if m != nil && m.Recovery != nil {
		return *m.Recovery
	}
	return 0
}

func (m *PlayerBaseInfo) SetUid(value string) {
	if m != nil {
		m.Uid = &value
	}
}

func (m *PlayerBaseInfo) SetName(value string) {
	if m != nil {
		m.Name = &value
	}
}

func (m *PlayerBaseInfo) SetLevel(value uint32) {
	if m != nil {
		m.Level = &value
	}
}

func (m *PlayerBaseInfo) SetExperience(value uint32) {
	if m != nil {
		m.Experience = &value
	}
}

func (m *PlayerBaseInfo) SetHP(value uint32) {
	if m != nil {
		m.HP = &value
	}
}

func (m *PlayerBaseInfo) SetMP(value uint32) {
	if m != nil {
		m.MP = &value
	}
}

func (m *PlayerBaseInfo) SetRage(value uint32) {
	if m != nil {
		m.Rage = &value
	}
}

func (m *PlayerBaseInfo) SetMaxHP(value uint32) {
	if m != nil {
		m.MaxHP = &value
	}
}

func (m *PlayerBaseInfo) SetMaxMP(value uint32) {
	if m != nil {
		m.MaxMP = &value
	}
}

func (m *PlayerBaseInfo) SetMaxRage(value uint32) {
	if m != nil {
		m.MaxRage = &value
	}
}

func (m *PlayerBaseInfo) SetGender(value uint32) {
	if m != nil {
		m.Gender = &value
	}
}

func (m *PlayerBaseInfo) SetModelid(value uint32) {
	if m != nil {
		m.Modelid = &value
	}
}

func (m *PlayerBaseInfo) SetTransform(value *Transform) {
	if m != nil {
		m.Transform = value
	}
}

func (m *PlayerBaseInfo) SetStrenght(value uint32) {
	if m != nil {
		m.Strenght = &value
	}
}

func (m *PlayerBaseInfo) SetVelocity(value uint32) {
	if m != nil {
		m.Velocity = &value
	}
}

func (m *PlayerBaseInfo) SetMana(value uint32) {
	if m != nil {
		m.Mana = &value
	}
}

func (m *PlayerBaseInfo) SetDefence(value uint32) {
	if m != nil {
		m.Defence = &value
	}
}

func (m *PlayerBaseInfo) SetStamina(value uint32) {
	if m != nil {
		m.Stamina = &value
	}
}

func (m *PlayerBaseInfo) SetATK(value uint32) {
	if m != nil {
		m.ATK = &value
	}
}

func (m *PlayerBaseInfo) SetArmor(value uint32) {
	if m != nil {
		m.Armor = &value
	}
}

func (m *PlayerBaseInfo) SetAgility(value uint32) {
	if m != nil {
		m.Agility = &value
	}
}

func (m *PlayerBaseInfo) SetSpirit(value uint32) {
	if m != nil {
		m.Spirit = &value
	}
}

func (m *PlayerBaseInfo) SetRecovery(value uint32) {
	if m != nil {
		m.Recovery = &value
	}
}

type PlayerInfo struct {
	Base             *PlayerBaseInfo `protobuf:"bytes,1,req,name=base" json:"base,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *PlayerInfo) Reset()         { *m = PlayerInfo{} }
func (m *PlayerInfo) String() string { return proto.CompactTextString(m) }
func (*PlayerInfo) ProtoMessage()    {}

func (m *PlayerInfo) GetBase() *PlayerBaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *PlayerInfo) SetBase(value *PlayerBaseInfo) {
	if m != nil {
		m.Base = value
	}
}

type Vector3 struct {
	X                *float32 `protobuf:"fixed32,1,req" json:"X,omitempty"`
	Y                *float32 `protobuf:"fixed32,2,req" json:"Y,omitempty"`
	Z                *float32 `protobuf:"fixed32,3,req" json:"Z,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Vector3) Reset()         { *m = Vector3{} }
func (m *Vector3) String() string { return proto.CompactTextString(m) }
func (*Vector3) ProtoMessage()    {}

func (m *Vector3) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *Vector3) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *Vector3) GetZ() float32 {
	if m != nil && m.Z != nil {
		return *m.Z
	}
	return 0
}

func (m *Vector3) SetX(value float32) {
	if m != nil {
		m.X = &value
	}
}

func (m *Vector3) SetY(value float32) {
	if m != nil {
		m.Y = &value
	}
}

func (m *Vector3) SetZ(value float32) {
	if m != nil {
		m.Z = &value
	}
}

type Quaternion struct {
	X                *float32 `protobuf:"fixed32,1,req" json:"X,omitempty"`
	Y                *float32 `protobuf:"fixed32,2,req" json:"Y,omitempty"`
	Z                *float32 `protobuf:"fixed32,3,req" json:"Z,omitempty"`
	W                *float32 `protobuf:"fixed32,4,req" json:"W,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Quaternion) Reset()         { *m = Quaternion{} }
func (m *Quaternion) String() string { return proto.CompactTextString(m) }
func (*Quaternion) ProtoMessage()    {}

func (m *Quaternion) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *Quaternion) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *Quaternion) GetZ() float32 {
	if m != nil && m.Z != nil {
		return *m.Z
	}
	return 0
}

func (m *Quaternion) GetW() float32 {
	if m != nil && m.W != nil {
		return *m.W
	}
	return 0
}

func (m *Quaternion) SetX(value float32) {
	if m != nil {
		m.X = &value
	}
}

func (m *Quaternion) SetY(value float32) {
	if m != nil {
		m.Y = &value
	}
}

func (m *Quaternion) SetZ(value float32) {
	if m != nil {
		m.Z = &value
	}
}

func (m *Quaternion) SetW(value float32) {
	if m != nil {
		m.W = &value
	}
}

type Transform struct {
	Position         *Vector3    `protobuf:"bytes,1,req,name=position" json:"position,omitempty"`
	Rotation         *Quaternion `protobuf:"bytes,2,req,name=rotation" json:"rotation,omitempty"`
	Scale            *Vector3    `protobuf:"bytes,3,req,name=scale" json:"scale,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *Transform) Reset()         { *m = Transform{} }
func (m *Transform) String() string { return proto.CompactTextString(m) }
func (*Transform) ProtoMessage()    {}

func (m *Transform) GetPosition() *Vector3 {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *Transform) GetRotation() *Quaternion {
	if m != nil {
		return m.Rotation
	}
	return nil
}

func (m *Transform) GetScale() *Vector3 {
	if m != nil {
		return m.Scale
	}
	return nil
}

func (m *Transform) SetPosition(value *Vector3) {
	if m != nil {
		m.Position = value
	}
}

func (m *Transform) SetRotation(value *Quaternion) {
	if m != nil {
		m.Rotation = value
	}
}

func (m *Transform) SetScale(value *Vector3) {
	if m != nil {
		m.Scale = value
	}
}

func init() {
	proto.RegisterEnum("protobuf.ConnectorInfoResult_Result", ConnectorInfoResult_Result_name, ConnectorInfoResult_Result_value)
	proto.RegisterEnum("protobuf.LoginResult_Result", LoginResult_Result_name, LoginResult_Result_value)
}
